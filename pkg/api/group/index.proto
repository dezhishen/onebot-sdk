syntax = "proto3";
package group;
import "group.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/Empty.proto";
option go_package="github.com/dezhishen/onebot-sdk/pkg/api/group;group";
message GetGroupInfoRequest {
	int64 group_id = 1;
	bool no_cache = 2;
}

message GetGroupMemberInfoRequest {
	int64 group_id = 1;
	int64 user_id = 2;
	bool no_cache = 3;
}
message GetGroupMemberListRequest {
	int64 group_id = 1;
	bool no_cache = 2;
}
message GetGroupHonorInfoRequest {
	int64 group_id = 1;
	string type = 2;
}

service OnebotApiGroupGRPCService {
	// 获取群信息
	// get_group_info
	// group_id: 群号
	// no_cache: 是否使用缓存（使用缓存可能更新不及时，但响应更快）
	rpc GetGroupInfo (GetGroupInfoRequest) returns (model.GroupInfoResultGRPC) {}
	// 获取群列表
	// get_group_list
	// no_cache: 是否不使用缓存（使用缓存可能更新不及时，但响应更快）
	rpc GetGroupList (google.protobuf.BoolValue) returns (model.GroupListResultGRPC) {}
	// 获取群成员信息
	// get_group_member_info
	// group_id: 群号
	// user_id: QQ 号
	// no_cache: 是否不使用缓存（使用缓存可能更新不及时，但响应更快）
	rpc GetGroupMemberInfo (GetGroupMemberInfoRequest) returns (model.GroupMemberInfoResultGRPC) {}
	// 获取群成员列表
	// get_group_member_list
	// group_id: 群号
	// no_cache: 是否不使用缓存（使用缓存可能更新不及时，但响应更快）
	rpc GetGroupMemberList (GetGroupMemberListRequest) returns (model.GroupMemberListResultGRPC) {}
	// 获取群荣誉信息
	// get_group_honor_info
	// group_id: 群号
	// type: 群荣誉类型，目前支持 talkative（群聊之火）、performer（群聊炽焰）、legend（群聊传说）、strong_newbie（群聊新星）、emotion（群表情之火）
	rpc GetGroupHonorInfo (GetGroupHonorInfoRequest) returns (model.GroupHonorInfoResultGRPC) {}
	// 获取群系统消息
	// get_group_system_msg
	rpc GetGroupSystemMsg (google.protobuf.Empty) returns (model.GroupSystemMsgResultGRPC) {}
	// 获取精华消息列表
	// get_essence_msg_list
	// group_id: 群号
	rpc GetEssenceMsgList (google.protobuf.Int64Value) returns (model.EssenceMsgListResultGRPC) {}
	// 获取群 @全体成员 剩余次数
	// get_group_at_all_remain
	// group_id: 群号
	rpc GetGroupAtAllRemain (google.protobuf.Int64Value) returns (model.GroupAtAllRemainResultGRPC) {}
}