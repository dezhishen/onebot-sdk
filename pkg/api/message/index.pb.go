// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: index.proto

package message

import (
	context "context"
	model "github.com/dezhishen/onebot-sdk/pkg/model"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendGroupForwardMsgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  int64                       `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Messages []*model.MessageSegmentGRPC `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *SendGroupForwardMsgRequest) Reset() {
	*x = SendGroupForwardMsgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupForwardMsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupForwardMsgRequest) ProtoMessage() {}

func (x *SendGroupForwardMsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupForwardMsgRequest.ProtoReflect.Descriptor instead.
func (*SendGroupForwardMsgRequest) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{0}
}

func (x *SendGroupForwardMsgRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SendGroupForwardMsgRequest) GetMessages() []*model.MessageSegmentGRPC {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SendPrivateForwardMsgGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64                       `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Messages []*model.MessageSegmentGRPC `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *SendPrivateForwardMsgGRPC) Reset() {
	*x = SendPrivateForwardMsgGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPrivateForwardMsgGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPrivateForwardMsgGRPC) ProtoMessage() {}

func (x *SendPrivateForwardMsgGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPrivateForwardMsgGRPC.ProtoReflect.Descriptor instead.
func (*SendPrivateForwardMsgGRPC) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{1}
}

func (x *SendPrivateForwardMsgGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SendPrivateForwardMsgGRPC) GetMessages() []*model.MessageSegmentGRPC {
	if x != nil {
		return x.Messages
	}
	return nil
}

type GetGroupMsgHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId    int64 `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	MessageSeq int64 `protobuf:"varint,2,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`
}

func (x *GetGroupMsgHistoryRequest) Reset() {
	*x = GetGroupMsgHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMsgHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMsgHistoryRequest) ProtoMessage() {}

func (x *GetGroupMsgHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMsgHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMsgHistoryRequest) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{2}
}

func (x *GetGroupMsgHistoryRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GetGroupMsgHistoryRequest) GetMessageSeq() int64 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

var File_index_proto protoreflect.FileDescriptor

var file_index_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x1a, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x52, 0x50, 0x43, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x6a, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73,
	0x67, 0x47, 0x52, 0x50, 0x43, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x52, 0x50, 0x43, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x73, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x32, 0xbb, 0x06, 0x0a,
	0x1b, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x47, 0x52, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x15,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73,
	0x67, 0x47, 0x52, 0x50, 0x43, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47,
	0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x47, 0x52, 0x50, 0x43, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x73,
	0x67, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x52, 0x50, 0x43, 0x1a, 0x1c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50,
	0x43, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67,
	0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x6b, 0x4d,
	0x73, 0x67, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67,
	0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x23, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52,
	0x50, 0x43, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x23, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x4d, 0x73, 0x67, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x4d, 0x73, 0x67, 0x47, 0x52, 0x50, 0x43, 0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50,
	0x43, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x73, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x7a, 0x68, 0x69, 0x73, 0x68,
	0x65, 0x6e, 0x2f, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_index_proto_rawDescOnce sync.Once
	file_index_proto_rawDescData = file_index_proto_rawDesc
)

func file_index_proto_rawDescGZIP() []byte {
	file_index_proto_rawDescOnce.Do(func() {
		file_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_index_proto_rawDescData)
	})
	return file_index_proto_rawDescData
}

var file_index_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_index_proto_goTypes = []interface{}{
	(*SendGroupForwardMsgRequest)(nil),             // 0: message.SendGroupForwardMsgRequest
	(*SendPrivateForwardMsgGRPC)(nil),              // 1: message.SendPrivateForwardMsgGRPC
	(*GetGroupMsgHistoryRequest)(nil),              // 2: message.GetGroupMsgHistoryRequest
	(*model.MessageSegmentGRPC)(nil),               // 3: model.MessageSegmentGRPC
	(*model.PrivateMsgGRPC)(nil),                   // 4: model.PrivateMsgGRPC
	(*model.GroupMsgGRPC)(nil),                     // 5: model.GroupMsgGRPC
	(*model.MsgForSendGRPC)(nil),                   // 6: model.MsgForSendGRPC
	(*wrapperspb.Int64Value)(nil),                  // 7: google.protobuf.Int64Value
	(*model.SendMessageResultGRPC)(nil),            // 8: model.SendMessageResultGRPC
	(*model.MessageDataResultGRPC)(nil),            // 9: model.MessageDataResultGRPC
	(*emptypb.Empty)(nil),                          // 10: google.protobuf.Empty
	(*model.ForwardMessageDataResultGRPC)(nil),     // 11: model.ForwardMessageDataResultGRPC
	(*model.SendForwardMessageDataResultGRPC)(nil), // 12: model.SendForwardMessageDataResultGRPC
	(*model.MessagesResultGRPC)(nil),               // 13: model.MessagesResultGRPC
}
var file_index_proto_depIdxs = []int32{
	3,  // 0: message.SendGroupForwardMsgRequest.messages:type_name -> model.MessageSegmentGRPC
	3,  // 1: message.SendPrivateForwardMsgGRPC.messages:type_name -> model.MessageSegmentGRPC
	4,  // 2: message.OnebotApiMessageGRPCService.SendPrivateMsg:input_type -> model.PrivateMsgGRPC
	5,  // 3: message.OnebotApiMessageGRPCService.SendGroupMsg:input_type -> model.GroupMsgGRPC
	6,  // 4: message.OnebotApiMessageGRPCService.SendMsg:input_type -> model.MsgForSendGRPC
	7,  // 5: message.OnebotApiMessageGRPCService.GetMsg:input_type -> google.protobuf.Int64Value
	7,  // 6: message.OnebotApiMessageGRPCService.DeleteMsg:input_type -> google.protobuf.Int64Value
	7,  // 7: message.OnebotApiMessageGRPCService.MarkMsgAsRead:input_type -> google.protobuf.Int64Value
	7,  // 8: message.OnebotApiMessageGRPCService.GetForwardMsg:input_type -> google.protobuf.Int64Value
	0,  // 9: message.OnebotApiMessageGRPCService.SendGroupForwardMsg:input_type -> message.SendGroupForwardMsgRequest
	1,  // 10: message.OnebotApiMessageGRPCService.SendPrivateForwardMsg:input_type -> message.SendPrivateForwardMsgGRPC
	2,  // 11: message.OnebotApiMessageGRPCService.GetGroupMsgHistory:input_type -> message.GetGroupMsgHistoryRequest
	8,  // 12: message.OnebotApiMessageGRPCService.SendPrivateMsg:output_type -> model.SendMessageResultGRPC
	8,  // 13: message.OnebotApiMessageGRPCService.SendGroupMsg:output_type -> model.SendMessageResultGRPC
	8,  // 14: message.OnebotApiMessageGRPCService.SendMsg:output_type -> model.SendMessageResultGRPC
	9,  // 15: message.OnebotApiMessageGRPCService.GetMsg:output_type -> model.MessageDataResultGRPC
	10, // 16: message.OnebotApiMessageGRPCService.DeleteMsg:output_type -> google.protobuf.Empty
	10, // 17: message.OnebotApiMessageGRPCService.MarkMsgAsRead:output_type -> google.protobuf.Empty
	11, // 18: message.OnebotApiMessageGRPCService.GetForwardMsg:output_type -> model.ForwardMessageDataResultGRPC
	12, // 19: message.OnebotApiMessageGRPCService.SendGroupForwardMsg:output_type -> model.SendForwardMessageDataResultGRPC
	12, // 20: message.OnebotApiMessageGRPCService.SendPrivateForwardMsg:output_type -> model.SendForwardMessageDataResultGRPC
	13, // 21: message.OnebotApiMessageGRPCService.GetGroupMsgHistory:output_type -> model.MessagesResultGRPC
	12, // [12:22] is the sub-list for method output_type
	2,  // [2:12] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_index_proto_init() }
func file_index_proto_init() {
	if File_index_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupForwardMsgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPrivateForwardMsgGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMsgHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_index_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_index_proto_goTypes,
		DependencyIndexes: file_index_proto_depIdxs,
		MessageInfos:      file_index_proto_msgTypes,
	}.Build()
	File_index_proto = out.File
	file_index_proto_rawDesc = nil
	file_index_proto_goTypes = nil
	file_index_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OnebotApiMessageGRPCServiceClient is the client API for OnebotApiMessageGRPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnebotApiMessageGRPCServiceClient interface {
	// 发送私信
	// send_private_msg
	// msg 消息
	SendPrivateMsg(ctx context.Context, in *model.PrivateMsgGRPC, opts ...grpc.CallOption) (*model.SendMessageResultGRPC, error)
	// 发送群消息
	// send_group_msg
	// msg 消息
	SendGroupMsg(ctx context.Context, in *model.GroupMsgGRPC, opts ...grpc.CallOption) (*model.SendMessageResultGRPC, error)
	// 发送消息
	SendMsg(ctx context.Context, in *model.MsgForSendGRPC, opts ...grpc.CallOption) (*model.SendMessageResultGRPC, error)
	// 获取消息
	// get_msg
	GetMsg(ctx context.Context, in *wrapperspb.Int64Value, opts ...grpc.CallOption) (*model.MessageDataResultGRPC, error)
	// 撤回消息
	// delete_msg
	DeleteMsg(ctx context.Context, in *wrapperspb.Int64Value, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 标记消息已读
	// mark_msg_as_read
	MarkMsgAsRead(ctx context.Context, in *wrapperspb.Int64Value, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 获取合并转发消息
	// get_forward_msg
	GetForwardMsg(ctx context.Context, in *wrapperspb.Int64Value, opts ...grpc.CallOption) (*model.ForwardMessageDataResultGRPC, error)
	// 发送合并转发 ( 群聊 )
	// send_group_forward_msg
	SendGroupForwardMsg(ctx context.Context, in *SendGroupForwardMsgRequest, opts ...grpc.CallOption) (*model.SendForwardMessageDataResultGRPC, error)
	// 发送合并转发 ( 好友 )
	// send_private_forward_msg
	SendPrivateForwardMsg(ctx context.Context, in *SendPrivateForwardMsgGRPC, opts ...grpc.CallOption) (*model.SendForwardMessageDataResultGRPC, error)
	// 获取群消息历史记录
	// get_group_msg_history
	GetGroupMsgHistory(ctx context.Context, in *GetGroupMsgHistoryRequest, opts ...grpc.CallOption) (*model.MessagesResultGRPC, error)
}

type onebotApiMessageGRPCServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOnebotApiMessageGRPCServiceClient(cc grpc.ClientConnInterface) OnebotApiMessageGRPCServiceClient {
	return &onebotApiMessageGRPCServiceClient{cc}
}

func (c *onebotApiMessageGRPCServiceClient) SendPrivateMsg(ctx context.Context, in *model.PrivateMsgGRPC, opts ...grpc.CallOption) (*model.SendMessageResultGRPC, error) {
	out := new(model.SendMessageResultGRPC)
	err := c.cc.Invoke(ctx, "/message.OnebotApiMessageGRPCService/SendPrivateMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiMessageGRPCServiceClient) SendGroupMsg(ctx context.Context, in *model.GroupMsgGRPC, opts ...grpc.CallOption) (*model.SendMessageResultGRPC, error) {
	out := new(model.SendMessageResultGRPC)
	err := c.cc.Invoke(ctx, "/message.OnebotApiMessageGRPCService/SendGroupMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiMessageGRPCServiceClient) SendMsg(ctx context.Context, in *model.MsgForSendGRPC, opts ...grpc.CallOption) (*model.SendMessageResultGRPC, error) {
	out := new(model.SendMessageResultGRPC)
	err := c.cc.Invoke(ctx, "/message.OnebotApiMessageGRPCService/SendMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiMessageGRPCServiceClient) GetMsg(ctx context.Context, in *wrapperspb.Int64Value, opts ...grpc.CallOption) (*model.MessageDataResultGRPC, error) {
	out := new(model.MessageDataResultGRPC)
	err := c.cc.Invoke(ctx, "/message.OnebotApiMessageGRPCService/GetMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiMessageGRPCServiceClient) DeleteMsg(ctx context.Context, in *wrapperspb.Int64Value, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/message.OnebotApiMessageGRPCService/DeleteMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiMessageGRPCServiceClient) MarkMsgAsRead(ctx context.Context, in *wrapperspb.Int64Value, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/message.OnebotApiMessageGRPCService/MarkMsgAsRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiMessageGRPCServiceClient) GetForwardMsg(ctx context.Context, in *wrapperspb.Int64Value, opts ...grpc.CallOption) (*model.ForwardMessageDataResultGRPC, error) {
	out := new(model.ForwardMessageDataResultGRPC)
	err := c.cc.Invoke(ctx, "/message.OnebotApiMessageGRPCService/GetForwardMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiMessageGRPCServiceClient) SendGroupForwardMsg(ctx context.Context, in *SendGroupForwardMsgRequest, opts ...grpc.CallOption) (*model.SendForwardMessageDataResultGRPC, error) {
	out := new(model.SendForwardMessageDataResultGRPC)
	err := c.cc.Invoke(ctx, "/message.OnebotApiMessageGRPCService/SendGroupForwardMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiMessageGRPCServiceClient) SendPrivateForwardMsg(ctx context.Context, in *SendPrivateForwardMsgGRPC, opts ...grpc.CallOption) (*model.SendForwardMessageDataResultGRPC, error) {
	out := new(model.SendForwardMessageDataResultGRPC)
	err := c.cc.Invoke(ctx, "/message.OnebotApiMessageGRPCService/SendPrivateForwardMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiMessageGRPCServiceClient) GetGroupMsgHistory(ctx context.Context, in *GetGroupMsgHistoryRequest, opts ...grpc.CallOption) (*model.MessagesResultGRPC, error) {
	out := new(model.MessagesResultGRPC)
	err := c.cc.Invoke(ctx, "/message.OnebotApiMessageGRPCService/GetGroupMsgHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnebotApiMessageGRPCServiceServer is the server API for OnebotApiMessageGRPCService service.
type OnebotApiMessageGRPCServiceServer interface {
	// 发送私信
	// send_private_msg
	// msg 消息
	SendPrivateMsg(context.Context, *model.PrivateMsgGRPC) (*model.SendMessageResultGRPC, error)
	// 发送群消息
	// send_group_msg
	// msg 消息
	SendGroupMsg(context.Context, *model.GroupMsgGRPC) (*model.SendMessageResultGRPC, error)
	// 发送消息
	SendMsg(context.Context, *model.MsgForSendGRPC) (*model.SendMessageResultGRPC, error)
	// 获取消息
	// get_msg
	GetMsg(context.Context, *wrapperspb.Int64Value) (*model.MessageDataResultGRPC, error)
	// 撤回消息
	// delete_msg
	DeleteMsg(context.Context, *wrapperspb.Int64Value) (*emptypb.Empty, error)
	// 标记消息已读
	// mark_msg_as_read
	MarkMsgAsRead(context.Context, *wrapperspb.Int64Value) (*emptypb.Empty, error)
	// 获取合并转发消息
	// get_forward_msg
	GetForwardMsg(context.Context, *wrapperspb.Int64Value) (*model.ForwardMessageDataResultGRPC, error)
	// 发送合并转发 ( 群聊 )
	// send_group_forward_msg
	SendGroupForwardMsg(context.Context, *SendGroupForwardMsgRequest) (*model.SendForwardMessageDataResultGRPC, error)
	// 发送合并转发 ( 好友 )
	// send_private_forward_msg
	SendPrivateForwardMsg(context.Context, *SendPrivateForwardMsgGRPC) (*model.SendForwardMessageDataResultGRPC, error)
	// 获取群消息历史记录
	// get_group_msg_history
	GetGroupMsgHistory(context.Context, *GetGroupMsgHistoryRequest) (*model.MessagesResultGRPC, error)
}

// UnimplementedOnebotApiMessageGRPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOnebotApiMessageGRPCServiceServer struct {
}

func (*UnimplementedOnebotApiMessageGRPCServiceServer) SendPrivateMsg(context.Context, *model.PrivateMsgGRPC) (*model.SendMessageResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPrivateMsg not implemented")
}
func (*UnimplementedOnebotApiMessageGRPCServiceServer) SendGroupMsg(context.Context, *model.GroupMsgGRPC) (*model.SendMessageResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendGroupMsg not implemented")
}
func (*UnimplementedOnebotApiMessageGRPCServiceServer) SendMsg(context.Context, *model.MsgForSendGRPC) (*model.SendMessageResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMsg not implemented")
}
func (*UnimplementedOnebotApiMessageGRPCServiceServer) GetMsg(context.Context, *wrapperspb.Int64Value) (*model.MessageDataResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMsg not implemented")
}
func (*UnimplementedOnebotApiMessageGRPCServiceServer) DeleteMsg(context.Context, *wrapperspb.Int64Value) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMsg not implemented")
}
func (*UnimplementedOnebotApiMessageGRPCServiceServer) MarkMsgAsRead(context.Context, *wrapperspb.Int64Value) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkMsgAsRead not implemented")
}
func (*UnimplementedOnebotApiMessageGRPCServiceServer) GetForwardMsg(context.Context, *wrapperspb.Int64Value) (*model.ForwardMessageDataResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetForwardMsg not implemented")
}
func (*UnimplementedOnebotApiMessageGRPCServiceServer) SendGroupForwardMsg(context.Context, *SendGroupForwardMsgRequest) (*model.SendForwardMessageDataResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendGroupForwardMsg not implemented")
}
func (*UnimplementedOnebotApiMessageGRPCServiceServer) SendPrivateForwardMsg(context.Context, *SendPrivateForwardMsgGRPC) (*model.SendForwardMessageDataResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPrivateForwardMsg not implemented")
}
func (*UnimplementedOnebotApiMessageGRPCServiceServer) GetGroupMsgHistory(context.Context, *GetGroupMsgHistoryRequest) (*model.MessagesResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupMsgHistory not implemented")
}

func RegisterOnebotApiMessageGRPCServiceServer(s *grpc.Server, srv OnebotApiMessageGRPCServiceServer) {
	s.RegisterService(&_OnebotApiMessageGRPCService_serviceDesc, srv)
}

func _OnebotApiMessageGRPCService_SendPrivateMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.PrivateMsgGRPC)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiMessageGRPCServiceServer).SendPrivateMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.OnebotApiMessageGRPCService/SendPrivateMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiMessageGRPCServiceServer).SendPrivateMsg(ctx, req.(*model.PrivateMsgGRPC))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiMessageGRPCService_SendGroupMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.GroupMsgGRPC)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiMessageGRPCServiceServer).SendGroupMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.OnebotApiMessageGRPCService/SendGroupMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiMessageGRPCServiceServer).SendGroupMsg(ctx, req.(*model.GroupMsgGRPC))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiMessageGRPCService_SendMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.MsgForSendGRPC)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiMessageGRPCServiceServer).SendMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.OnebotApiMessageGRPCService/SendMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiMessageGRPCServiceServer).SendMsg(ctx, req.(*model.MsgForSendGRPC))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiMessageGRPCService_GetMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.Int64Value)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiMessageGRPCServiceServer).GetMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.OnebotApiMessageGRPCService/GetMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiMessageGRPCServiceServer).GetMsg(ctx, req.(*wrapperspb.Int64Value))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiMessageGRPCService_DeleteMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.Int64Value)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiMessageGRPCServiceServer).DeleteMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.OnebotApiMessageGRPCService/DeleteMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiMessageGRPCServiceServer).DeleteMsg(ctx, req.(*wrapperspb.Int64Value))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiMessageGRPCService_MarkMsgAsRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.Int64Value)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiMessageGRPCServiceServer).MarkMsgAsRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.OnebotApiMessageGRPCService/MarkMsgAsRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiMessageGRPCServiceServer).MarkMsgAsRead(ctx, req.(*wrapperspb.Int64Value))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiMessageGRPCService_GetForwardMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.Int64Value)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiMessageGRPCServiceServer).GetForwardMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.OnebotApiMessageGRPCService/GetForwardMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiMessageGRPCServiceServer).GetForwardMsg(ctx, req.(*wrapperspb.Int64Value))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiMessageGRPCService_SendGroupForwardMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendGroupForwardMsgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiMessageGRPCServiceServer).SendGroupForwardMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.OnebotApiMessageGRPCService/SendGroupForwardMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiMessageGRPCServiceServer).SendGroupForwardMsg(ctx, req.(*SendGroupForwardMsgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiMessageGRPCService_SendPrivateForwardMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendPrivateForwardMsgGRPC)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiMessageGRPCServiceServer).SendPrivateForwardMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.OnebotApiMessageGRPCService/SendPrivateForwardMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiMessageGRPCServiceServer).SendPrivateForwardMsg(ctx, req.(*SendPrivateForwardMsgGRPC))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiMessageGRPCService_GetGroupMsgHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupMsgHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiMessageGRPCServiceServer).GetGroupMsgHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.OnebotApiMessageGRPCService/GetGroupMsgHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiMessageGRPCServiceServer).GetGroupMsgHistory(ctx, req.(*GetGroupMsgHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OnebotApiMessageGRPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message.OnebotApiMessageGRPCService",
	HandlerType: (*OnebotApiMessageGRPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendPrivateMsg",
			Handler:    _OnebotApiMessageGRPCService_SendPrivateMsg_Handler,
		},
		{
			MethodName: "SendGroupMsg",
			Handler:    _OnebotApiMessageGRPCService_SendGroupMsg_Handler,
		},
		{
			MethodName: "SendMsg",
			Handler:    _OnebotApiMessageGRPCService_SendMsg_Handler,
		},
		{
			MethodName: "GetMsg",
			Handler:    _OnebotApiMessageGRPCService_GetMsg_Handler,
		},
		{
			MethodName: "DeleteMsg",
			Handler:    _OnebotApiMessageGRPCService_DeleteMsg_Handler,
		},
		{
			MethodName: "MarkMsgAsRead",
			Handler:    _OnebotApiMessageGRPCService_MarkMsgAsRead_Handler,
		},
		{
			MethodName: "GetForwardMsg",
			Handler:    _OnebotApiMessageGRPCService_GetForwardMsg_Handler,
		},
		{
			MethodName: "SendGroupForwardMsg",
			Handler:    _OnebotApiMessageGRPCService_SendGroupForwardMsg_Handler,
		},
		{
			MethodName: "SendPrivateForwardMsg",
			Handler:    _OnebotApiMessageGRPCService_SendPrivateForwardMsg_Handler,
		},
		{
			MethodName: "GetGroupMsgHistory",
			Handler:    _OnebotApiMessageGRPCService_GetGroupMsgHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "index.proto",
}
