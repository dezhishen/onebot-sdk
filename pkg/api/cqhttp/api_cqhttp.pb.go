// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: api_cqhttp.proto

package cqhttp

import (
	context "context"
	model "github.com/dezhishen/onebot-sdk/pkg/model"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DownloadFileRequestGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ThreadCount int32    `protobuf:"varint,2,opt,name=thread_count,json=threadCount,proto3" json:"thread_count,omitempty"`
	Headers     []string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
}

func (x *DownloadFileRequestGRPC) Reset() {
	*x = DownloadFileRequestGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cqhttp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileRequestGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequestGRPC) ProtoMessage() {}

func (x *DownloadFileRequestGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_api_cqhttp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequestGRPC.ProtoReflect.Descriptor instead.
func (*DownloadFileRequestGRPC) Descriptor() ([]byte, []int) {
	return file_api_cqhttp_proto_rawDescGZIP(), []int{0}
}

func (x *DownloadFileRequestGRPC) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DownloadFileRequestGRPC) GetThreadCount() int32 {
	if x != nil {
		return x.ThreadCount
	}
	return 0
}

func (x *DownloadFileRequestGRPC) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type HiddenHandleQuickOperationRequestGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context   string `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Operation string `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *HiddenHandleQuickOperationRequestGRPC) Reset() {
	*x = HiddenHandleQuickOperationRequestGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cqhttp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiddenHandleQuickOperationRequestGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiddenHandleQuickOperationRequestGRPC) ProtoMessage() {}

func (x *HiddenHandleQuickOperationRequestGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_api_cqhttp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiddenHandleQuickOperationRequestGRPC.ProtoReflect.Descriptor instead.
func (*HiddenHandleQuickOperationRequestGRPC) Descriptor() ([]byte, []int) {
	return file_api_cqhttp_proto_rawDescGZIP(), []int{1}
}

func (x *HiddenHandleQuickOperationRequestGRPC) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *HiddenHandleQuickOperationRequestGRPC) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

var File_api_cqhttp_proto protoreflect.FileDescriptor

var file_api_cqhttp_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x71, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x63, 0x71, 0x68, 0x74, 0x74, 0x70, 0x1a, 0x0c, 0x63, 0x71, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22,
	0x5f, 0x0a, 0x25, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x51,
	0x75, 0x69, 0x63, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x32, 0xb0, 0x07, 0x0a, 0x1a, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x43, 0x71,
	0x68, 0x74, 0x74, 0x70, 0x47, 0x52, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x46, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x18, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x73,
	0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x71, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x52, 0x50, 0x43, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47,
	0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x72,
	0x6c, 0x53, 0x61, 0x66, 0x65, 0x6c, 0x79, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x53, 0x61, 0x66, 0x65, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1b, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x1a,
	0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x51, 0x75, 0x69, 0x63,
	0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x63, 0x71, 0x68,
	0x74, 0x74, 0x70, 0x2e, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x51, 0x75, 0x69, 0x63, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x65, 0x7a, 0x68, 0x69, 0x73, 0x68, 0x65, 0x6e, 0x2f, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x71, 0x68, 0x74, 0x74, 0x70, 0x3b, 0x63, 0x71, 0x68, 0x74, 0x74, 0x70, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_cqhttp_proto_rawDescOnce sync.Once
	file_api_cqhttp_proto_rawDescData = file_api_cqhttp_proto_rawDesc
)

func file_api_cqhttp_proto_rawDescGZIP() []byte {
	file_api_cqhttp_proto_rawDescOnce.Do(func() {
		file_api_cqhttp_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_cqhttp_proto_rawDescData)
	})
	return file_api_cqhttp_proto_rawDescData
}

var file_api_cqhttp_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_cqhttp_proto_goTypes = []interface{}{
	(*DownloadFileRequestGRPC)(nil),               // 0: cqhttp.DownloadFileRequestGRPC
	(*HiddenHandleQuickOperationRequestGRPC)(nil), // 1: cqhttp.HiddenHandleQuickOperationRequestGRPC
	(*wrapperspb.StringValue)(nil),                // 2: google.protobuf.StringValue
	(*emptypb.Empty)(nil),                         // 3: google.protobuf.Empty
	(*wrapperspb.Int32Value)(nil),                 // 4: google.protobuf.Int32Value
	(*model.CookiesResultGRPC)(nil),               // 5: model.CookiesResultGRPC
	(*model.CsrfTokenResultGRPC)(nil),             // 6: model.CsrfTokenResultGRPC
	(*model.CredentialsResultGRPC)(nil),           // 7: model.CredentialsResultGRPC
	(*model.VersionInfoResultGRPC)(nil),           // 8: model.VersionInfoResultGRPC
	(*model.StatusResultGRPC)(nil),                // 9: model.StatusResultGRPC
	(*model.DownloadFileResultGRPC)(nil),          // 10: model.DownloadFileResultGRPC
	(*model.CheckUrlSafelyResultGRPC)(nil),        // 11: model.CheckUrlSafelyResultGRPC
	(*model.WordSlicesResultGRPC)(nil),            // 12: model.WordSlicesResultGRPC
}
var file_api_cqhttp_proto_depIdxs = []int32{
	2,  // 0: cqhttp.OnebotApiCqhttpGRPCService.GetCookies:input_type -> google.protobuf.StringValue
	3,  // 1: cqhttp.OnebotApiCqhttpGRPCService.GetCsrfToken:input_type -> google.protobuf.Empty
	3,  // 2: cqhttp.OnebotApiCqhttpGRPCService.GetCredentials:input_type -> google.protobuf.Empty
	3,  // 3: cqhttp.OnebotApiCqhttpGRPCService.GetVersionInfo:input_type -> google.protobuf.Empty
	3,  // 4: cqhttp.OnebotApiCqhttpGRPCService.GetStatus:input_type -> google.protobuf.Empty
	4,  // 5: cqhttp.OnebotApiCqhttpGRPCService.SetRestart:input_type -> google.protobuf.Int32Value
	3,  // 6: cqhttp.OnebotApiCqhttpGRPCService.CleanCache:input_type -> google.protobuf.Empty
	2,  // 7: cqhttp.OnebotApiCqhttpGRPCService.ReloadEventFilter:input_type -> google.protobuf.StringValue
	0,  // 8: cqhttp.OnebotApiCqhttpGRPCService.DownloadFile:input_type -> cqhttp.DownloadFileRequestGRPC
	2,  // 9: cqhttp.OnebotApiCqhttpGRPCService.CheckUrlSafely:input_type -> google.protobuf.StringValue
	2,  // 10: cqhttp.OnebotApiCqhttpGRPCService.HiddenGetWordSlices:input_type -> google.protobuf.StringValue
	1,  // 11: cqhttp.OnebotApiCqhttpGRPCService.HiddenHandleQuickOperation:input_type -> cqhttp.HiddenHandleQuickOperationRequestGRPC
	5,  // 12: cqhttp.OnebotApiCqhttpGRPCService.GetCookies:output_type -> model.CookiesResultGRPC
	6,  // 13: cqhttp.OnebotApiCqhttpGRPCService.GetCsrfToken:output_type -> model.CsrfTokenResultGRPC
	7,  // 14: cqhttp.OnebotApiCqhttpGRPCService.GetCredentials:output_type -> model.CredentialsResultGRPC
	8,  // 15: cqhttp.OnebotApiCqhttpGRPCService.GetVersionInfo:output_type -> model.VersionInfoResultGRPC
	9,  // 16: cqhttp.OnebotApiCqhttpGRPCService.GetStatus:output_type -> model.StatusResultGRPC
	3,  // 17: cqhttp.OnebotApiCqhttpGRPCService.SetRestart:output_type -> google.protobuf.Empty
	3,  // 18: cqhttp.OnebotApiCqhttpGRPCService.CleanCache:output_type -> google.protobuf.Empty
	3,  // 19: cqhttp.OnebotApiCqhttpGRPCService.ReloadEventFilter:output_type -> google.protobuf.Empty
	10, // 20: cqhttp.OnebotApiCqhttpGRPCService.DownloadFile:output_type -> model.DownloadFileResultGRPC
	11, // 21: cqhttp.OnebotApiCqhttpGRPCService.CheckUrlSafely:output_type -> model.CheckUrlSafelyResultGRPC
	12, // 22: cqhttp.OnebotApiCqhttpGRPCService.HiddenGetWordSlices:output_type -> model.WordSlicesResultGRPC
	3,  // 23: cqhttp.OnebotApiCqhttpGRPCService.HiddenHandleQuickOperation:output_type -> google.protobuf.Empty
	12, // [12:24] is the sub-list for method output_type
	0,  // [0:12] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_api_cqhttp_proto_init() }
func file_api_cqhttp_proto_init() {
	if File_api_cqhttp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_cqhttp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileRequestGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cqhttp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiddenHandleQuickOperationRequestGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_cqhttp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_cqhttp_proto_goTypes,
		DependencyIndexes: file_api_cqhttp_proto_depIdxs,
		MessageInfos:      file_api_cqhttp_proto_msgTypes,
	}.Build()
	File_api_cqhttp_proto = out.File
	file_api_cqhttp_proto_rawDesc = nil
	file_api_cqhttp_proto_goTypes = nil
	file_api_cqhttp_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OnebotApiCqhttpGRPCServiceClient is the client API for OnebotApiCqhttpGRPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnebotApiCqhttpGRPCServiceClient interface {
	// 获取 Cookies
	// get_cookies
	// domain 指定域名
	GetCookies(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*model.CookiesResultGRPC, error)
	// get_csrf_token
	GetCsrfToken(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*model.CsrfTokenResultGRPC, error)
	// 获取 QQ 相关接口凭证
	// get_credentials
	GetCredentials(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*model.CredentialsResultGRPC, error)
	// 获取版本信息
	// get_version_info
	GetVersionInfo(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*model.VersionInfoResultGRPC, error)
	// 获取状态
	// get_status
	GetStatus(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*model.StatusResultGRPC, error)
	// 重启 Go-CqHttp
	// set_restart
	// delay 要延迟的毫秒数, 如果默认情况下无法重启, 可以尝试设置延迟为 2000 左右
	SetRestart(ctx context.Context, in *wrapperspb.Int32Value, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 清理缓存
	// clean_cache
	CleanCache(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 重载事件过滤器
	// reload_event_filter
	// file 事件过滤器文件路径
	ReloadEventFilter(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 下载文件到缓存目录
	// download_file
	// url 文件链接
	// thread_count 线程数
	// headers 请求头
	DownloadFile(ctx context.Context, in *DownloadFileRequestGRPC, opts ...grpc.CallOption) (*model.DownloadFileResultGRPC, error)
	// 检查链接安全性
	// check_url_safely
	// url 链接
	CheckUrlSafely(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*model.CheckUrlSafelyResultGRPC, error)
	// 获取中文分词 ( 隐藏 API )
	// .get_word_slices
	// content 内容
	HiddenGetWordSlices(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*model.WordSlicesResultGRPC, error)
	// 对事件执行快速操作 ( 隐藏 API )
	// .handle_quick_operation
	// context 事件上下文
	// operation 操作
	HiddenHandleQuickOperation(ctx context.Context, in *HiddenHandleQuickOperationRequestGRPC, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type onebotApiCqhttpGRPCServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOnebotApiCqhttpGRPCServiceClient(cc grpc.ClientConnInterface) OnebotApiCqhttpGRPCServiceClient {
	return &onebotApiCqhttpGRPCServiceClient{cc}
}

func (c *onebotApiCqhttpGRPCServiceClient) GetCookies(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*model.CookiesResultGRPC, error) {
	out := new(model.CookiesResultGRPC)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/GetCookies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) GetCsrfToken(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*model.CsrfTokenResultGRPC, error) {
	out := new(model.CsrfTokenResultGRPC)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/GetCsrfToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) GetCredentials(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*model.CredentialsResultGRPC, error) {
	out := new(model.CredentialsResultGRPC)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/GetCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) GetVersionInfo(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*model.VersionInfoResultGRPC, error) {
	out := new(model.VersionInfoResultGRPC)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/GetVersionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) GetStatus(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*model.StatusResultGRPC, error) {
	out := new(model.StatusResultGRPC)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) SetRestart(ctx context.Context, in *wrapperspb.Int32Value, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/SetRestart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) CleanCache(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/CleanCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) ReloadEventFilter(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/ReloadEventFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) DownloadFile(ctx context.Context, in *DownloadFileRequestGRPC, opts ...grpc.CallOption) (*model.DownloadFileResultGRPC, error) {
	out := new(model.DownloadFileResultGRPC)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/DownloadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) CheckUrlSafely(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*model.CheckUrlSafelyResultGRPC, error) {
	out := new(model.CheckUrlSafelyResultGRPC)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/CheckUrlSafely", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) HiddenGetWordSlices(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*model.WordSlicesResultGRPC, error) {
	out := new(model.WordSlicesResultGRPC)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/HiddenGetWordSlices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiCqhttpGRPCServiceClient) HiddenHandleQuickOperation(ctx context.Context, in *HiddenHandleQuickOperationRequestGRPC, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/cqhttp.OnebotApiCqhttpGRPCService/HiddenHandleQuickOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnebotApiCqhttpGRPCServiceServer is the server API for OnebotApiCqhttpGRPCService service.
type OnebotApiCqhttpGRPCServiceServer interface {
	// 获取 Cookies
	// get_cookies
	// domain 指定域名
	GetCookies(context.Context, *wrapperspb.StringValue) (*model.CookiesResultGRPC, error)
	// get_csrf_token
	GetCsrfToken(context.Context, *emptypb.Empty) (*model.CsrfTokenResultGRPC, error)
	// 获取 QQ 相关接口凭证
	// get_credentials
	GetCredentials(context.Context, *emptypb.Empty) (*model.CredentialsResultGRPC, error)
	// 获取版本信息
	// get_version_info
	GetVersionInfo(context.Context, *emptypb.Empty) (*model.VersionInfoResultGRPC, error)
	// 获取状态
	// get_status
	GetStatus(context.Context, *emptypb.Empty) (*model.StatusResultGRPC, error)
	// 重启 Go-CqHttp
	// set_restart
	// delay 要延迟的毫秒数, 如果默认情况下无法重启, 可以尝试设置延迟为 2000 左右
	SetRestart(context.Context, *wrapperspb.Int32Value) (*emptypb.Empty, error)
	// 清理缓存
	// clean_cache
	CleanCache(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	// 重载事件过滤器
	// reload_event_filter
	// file 事件过滤器文件路径
	ReloadEventFilter(context.Context, *wrapperspb.StringValue) (*emptypb.Empty, error)
	// 下载文件到缓存目录
	// download_file
	// url 文件链接
	// thread_count 线程数
	// headers 请求头
	DownloadFile(context.Context, *DownloadFileRequestGRPC) (*model.DownloadFileResultGRPC, error)
	// 检查链接安全性
	// check_url_safely
	// url 链接
	CheckUrlSafely(context.Context, *wrapperspb.StringValue) (*model.CheckUrlSafelyResultGRPC, error)
	// 获取中文分词 ( 隐藏 API )
	// .get_word_slices
	// content 内容
	HiddenGetWordSlices(context.Context, *wrapperspb.StringValue) (*model.WordSlicesResultGRPC, error)
	// 对事件执行快速操作 ( 隐藏 API )
	// .handle_quick_operation
	// context 事件上下文
	// operation 操作
	HiddenHandleQuickOperation(context.Context, *HiddenHandleQuickOperationRequestGRPC) (*emptypb.Empty, error)
}

// UnimplementedOnebotApiCqhttpGRPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOnebotApiCqhttpGRPCServiceServer struct {
}

func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) GetCookies(context.Context, *wrapperspb.StringValue) (*model.CookiesResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCookies not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) GetCsrfToken(context.Context, *emptypb.Empty) (*model.CsrfTokenResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCsrfToken not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) GetCredentials(context.Context, *emptypb.Empty) (*model.CredentialsResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCredentials not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) GetVersionInfo(context.Context, *emptypb.Empty) (*model.VersionInfoResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersionInfo not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) GetStatus(context.Context, *emptypb.Empty) (*model.StatusResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) SetRestart(context.Context, *wrapperspb.Int32Value) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRestart not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) CleanCache(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanCache not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) ReloadEventFilter(context.Context, *wrapperspb.StringValue) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReloadEventFilter not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) DownloadFile(context.Context, *DownloadFileRequestGRPC) (*model.DownloadFileResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadFile not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) CheckUrlSafely(context.Context, *wrapperspb.StringValue) (*model.CheckUrlSafelyResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUrlSafely not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) HiddenGetWordSlices(context.Context, *wrapperspb.StringValue) (*model.WordSlicesResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HiddenGetWordSlices not implemented")
}
func (*UnimplementedOnebotApiCqhttpGRPCServiceServer) HiddenHandleQuickOperation(context.Context, *HiddenHandleQuickOperationRequestGRPC) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HiddenHandleQuickOperation not implemented")
}

func RegisterOnebotApiCqhttpGRPCServiceServer(s *grpc.Server, srv OnebotApiCqhttpGRPCServiceServer) {
	s.RegisterService(&_OnebotApiCqhttpGRPCService_serviceDesc, srv)
}

func _OnebotApiCqhttpGRPCService_GetCookies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).GetCookies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/GetCookies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).GetCookies(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_GetCsrfToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).GetCsrfToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/GetCsrfToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).GetCsrfToken(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_GetCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).GetCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/GetCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).GetCredentials(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_GetVersionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).GetVersionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/GetVersionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).GetVersionInfo(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).GetStatus(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_SetRestart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.Int32Value)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).SetRestart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/SetRestart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).SetRestart(ctx, req.(*wrapperspb.Int32Value))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_CleanCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).CleanCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/CleanCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).CleanCache(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_ReloadEventFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).ReloadEventFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/ReloadEventFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).ReloadEventFilter(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_DownloadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadFileRequestGRPC)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).DownloadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/DownloadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).DownloadFile(ctx, req.(*DownloadFileRequestGRPC))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_CheckUrlSafely_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).CheckUrlSafely(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/CheckUrlSafely",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).CheckUrlSafely(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_HiddenGetWordSlices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).HiddenGetWordSlices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/HiddenGetWordSlices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).HiddenGetWordSlices(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiCqhttpGRPCService_HiddenHandleQuickOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HiddenHandleQuickOperationRequestGRPC)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiCqhttpGRPCServiceServer).HiddenHandleQuickOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cqhttp.OnebotApiCqhttpGRPCService/HiddenHandleQuickOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiCqhttpGRPCServiceServer).HiddenHandleQuickOperation(ctx, req.(*HiddenHandleQuickOperationRequestGRPC))
	}
	return interceptor(ctx, in, info, handler)
}

var _OnebotApiCqhttpGRPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cqhttp.OnebotApiCqhttpGRPCService",
	HandlerType: (*OnebotApiCqhttpGRPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCookies",
			Handler:    _OnebotApiCqhttpGRPCService_GetCookies_Handler,
		},
		{
			MethodName: "GetCsrfToken",
			Handler:    _OnebotApiCqhttpGRPCService_GetCsrfToken_Handler,
		},
		{
			MethodName: "GetCredentials",
			Handler:    _OnebotApiCqhttpGRPCService_GetCredentials_Handler,
		},
		{
			MethodName: "GetVersionInfo",
			Handler:    _OnebotApiCqhttpGRPCService_GetVersionInfo_Handler,
		},
		{
			MethodName: "GetStatus",
			Handler:    _OnebotApiCqhttpGRPCService_GetStatus_Handler,
		},
		{
			MethodName: "SetRestart",
			Handler:    _OnebotApiCqhttpGRPCService_SetRestart_Handler,
		},
		{
			MethodName: "CleanCache",
			Handler:    _OnebotApiCqhttpGRPCService_CleanCache_Handler,
		},
		{
			MethodName: "ReloadEventFilter",
			Handler:    _OnebotApiCqhttpGRPCService_ReloadEventFilter_Handler,
		},
		{
			MethodName: "DownloadFile",
			Handler:    _OnebotApiCqhttpGRPCService_DownloadFile_Handler,
		},
		{
			MethodName: "CheckUrlSafely",
			Handler:    _OnebotApiCqhttpGRPCService_CheckUrlSafely_Handler,
		},
		{
			MethodName: "HiddenGetWordSlices",
			Handler:    _OnebotApiCqhttpGRPCService_HiddenGetWordSlices_Handler,
		},
		{
			MethodName: "HiddenHandleQuickOperation",
			Handler:    _OnebotApiCqhttpGRPCService_HiddenHandleQuickOperation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api_cqhttp.proto",
}
