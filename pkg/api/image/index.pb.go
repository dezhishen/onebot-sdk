// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: index.proto

package image

import (
	context "context"
	model "github.com/dezhishen/onebot-sdk/pkg/model"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_index_proto protoreflect.FileDescriptor

var file_index_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x1a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xec, 0x01, 0x0a, 0x19, 0x4f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x52, 0x50,
	0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c,
	0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x59, 0x65, 0x73, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x4f, 0x63, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x19, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x63, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x7a, 0x68, 0x69, 0x73, 0x68, 0x65,
	0x6e, 0x2f, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x3b, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_index_proto_goTypes = []interface{}{
	(*wrapperspb.StringValue)(nil),    // 0: google.protobuf.StringValue
	(*emptypb.Empty)(nil),             // 1: google.protobuf.Empty
	(*model.ImageResultGRPC)(nil),     // 2: model.ImageResultGRPC
	(*model.BoolYesOfResultGRPC)(nil), // 3: model.BoolYesOfResultGRPC
	(*model.OcrImageResultGRPC)(nil),  // 4: model.OcrImageResultGRPC
}
var file_index_proto_depIdxs = []int32{
	0, // 0: image.OnebotApiImageGRPCService.GetImage:input_type -> google.protobuf.StringValue
	1, // 1: image.OnebotApiImageGRPCService.CanSendImage:input_type -> google.protobuf.Empty
	0, // 2: image.OnebotApiImageGRPCService.OcrImage:input_type -> google.protobuf.StringValue
	2, // 3: image.OnebotApiImageGRPCService.GetImage:output_type -> model.ImageResultGRPC
	3, // 4: image.OnebotApiImageGRPCService.CanSendImage:output_type -> model.BoolYesOfResultGRPC
	4, // 5: image.OnebotApiImageGRPCService.OcrImage:output_type -> model.OcrImageResultGRPC
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_index_proto_init() }
func file_index_proto_init() {
	if File_index_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_index_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_index_proto_goTypes,
		DependencyIndexes: file_index_proto_depIdxs,
	}.Build()
	File_index_proto = out.File
	file_index_proto_rawDesc = nil
	file_index_proto_goTypes = nil
	file_index_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OnebotApiImageGRPCServiceClient is the client API for OnebotApiImageGRPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnebotApiImageGRPCServiceClient interface {
	// 获取图片
	// get_image
	GetImage(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*model.ImageResultGRPC, error)
	// 检查是否可以发送图片
	// can_send_image
	CanSendImage(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*model.BoolYesOfResultGRPC, error)
	// 图片ORC识别
	// ocr_image
	OcrImage(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*model.OcrImageResultGRPC, error)
}

type onebotApiImageGRPCServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOnebotApiImageGRPCServiceClient(cc grpc.ClientConnInterface) OnebotApiImageGRPCServiceClient {
	return &onebotApiImageGRPCServiceClient{cc}
}

func (c *onebotApiImageGRPCServiceClient) GetImage(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*model.ImageResultGRPC, error) {
	out := new(model.ImageResultGRPC)
	err := c.cc.Invoke(ctx, "/image.OnebotApiImageGRPCService/GetImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiImageGRPCServiceClient) CanSendImage(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*model.BoolYesOfResultGRPC, error) {
	out := new(model.BoolYesOfResultGRPC)
	err := c.cc.Invoke(ctx, "/image.OnebotApiImageGRPCService/CanSendImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotApiImageGRPCServiceClient) OcrImage(ctx context.Context, in *wrapperspb.StringValue, opts ...grpc.CallOption) (*model.OcrImageResultGRPC, error) {
	out := new(model.OcrImageResultGRPC)
	err := c.cc.Invoke(ctx, "/image.OnebotApiImageGRPCService/OcrImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnebotApiImageGRPCServiceServer is the server API for OnebotApiImageGRPCService service.
type OnebotApiImageGRPCServiceServer interface {
	// 获取图片
	// get_image
	GetImage(context.Context, *wrapperspb.StringValue) (*model.ImageResultGRPC, error)
	// 检查是否可以发送图片
	// can_send_image
	CanSendImage(context.Context, *emptypb.Empty) (*model.BoolYesOfResultGRPC, error)
	// 图片ORC识别
	// ocr_image
	OcrImage(context.Context, *wrapperspb.StringValue) (*model.OcrImageResultGRPC, error)
}

// UnimplementedOnebotApiImageGRPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOnebotApiImageGRPCServiceServer struct {
}

func (*UnimplementedOnebotApiImageGRPCServiceServer) GetImage(context.Context, *wrapperspb.StringValue) (*model.ImageResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetImage not implemented")
}
func (*UnimplementedOnebotApiImageGRPCServiceServer) CanSendImage(context.Context, *emptypb.Empty) (*model.BoolYesOfResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CanSendImage not implemented")
}
func (*UnimplementedOnebotApiImageGRPCServiceServer) OcrImage(context.Context, *wrapperspb.StringValue) (*model.OcrImageResultGRPC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OcrImage not implemented")
}

func RegisterOnebotApiImageGRPCServiceServer(s *grpc.Server, srv OnebotApiImageGRPCServiceServer) {
	s.RegisterService(&_OnebotApiImageGRPCService_serviceDesc, srv)
}

func _OnebotApiImageGRPCService_GetImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiImageGRPCServiceServer).GetImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/image.OnebotApiImageGRPCService/GetImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiImageGRPCServiceServer).GetImage(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiImageGRPCService_CanSendImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiImageGRPCServiceServer).CanSendImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/image.OnebotApiImageGRPCService/CanSendImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiImageGRPCServiceServer).CanSendImage(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotApiImageGRPCService_OcrImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotApiImageGRPCServiceServer).OcrImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/image.OnebotApiImageGRPCService/OcrImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotApiImageGRPCServiceServer).OcrImage(ctx, req.(*wrapperspb.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

var _OnebotApiImageGRPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "image.OnebotApiImageGRPCService",
	HandlerType: (*OnebotApiImageGRPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetImage",
			Handler:    _OnebotApiImageGRPCService_GetImage_Handler,
		},
		{
			MethodName: "CanSendImage",
			Handler:    _OnebotApiImageGRPCService_CanSendImage_Handler,
		},
		{
			MethodName: "OcrImage",
			Handler:    _OnebotApiImageGRPCService_OcrImage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "index.proto",
}
