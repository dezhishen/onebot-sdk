// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: event_notice.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventNoticeBaseGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventBase  *EventBaseGRPC `protobuf:"bytes,1,opt,name=eventBase,proto3" json:"eventBase,omitempty"`
	NoticeType string         `protobuf:"bytes,2,opt,name=notice_type,json=noticeType,proto3" json:"notice_type,omitempty"`
}

func (x *EventNoticeBaseGRPC) Reset() {
	*x = EventNoticeBaseGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeBaseGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeBaseGRPC) ProtoMessage() {}

func (x *EventNoticeBaseGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeBaseGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeBaseGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{0}
}

func (x *EventNoticeBaseGRPC) GetEventBase() *EventBaseGRPC {
	if x != nil {
		return x.EventBase
	}
	return nil
}

func (x *EventNoticeBaseGRPC) GetNoticeType() string {
	if x != nil {
		return x.NoticeType
	}
	return ""
}

type EventNoticeGroupBaseGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeBase *EventNoticeBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeBase,proto3" json:"eventNoticeBase,omitempty"`
	//群号
	GroupId int64 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *EventNoticeGroupBaseGRPC) Reset() {
	*x = EventNoticeGroupBaseGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupBaseGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupBaseGRPC) ProtoMessage() {}

func (x *EventNoticeGroupBaseGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupBaseGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupBaseGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{1}
}

func (x *EventNoticeGroupBaseGRPC) GetEventNoticeBase() *EventNoticeBaseGRPC {
	if x != nil {
		return x.EventNoticeBase
	}
	return nil
}

func (x *EventNoticeGroupBaseGRPC) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type EventNoticeNotifyBaseGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeBase *EventNoticeBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeBase,proto3" json:"eventNoticeBase,omitempty"`
	// honor,lucky_king,poke 群荣誉,红包运气王，戳一戳
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
}

func (x *EventNoticeNotifyBaseGRPC) Reset() {
	*x = EventNoticeNotifyBaseGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeNotifyBaseGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeNotifyBaseGRPC) ProtoMessage() {}

func (x *EventNoticeNotifyBaseGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeNotifyBaseGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeNotifyBaseGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{2}
}

func (x *EventNoticeNotifyBaseGRPC) GetEventNoticeBase() *EventNoticeBaseGRPC {
	if x != nil {
		return x.EventNoticeBase
	}
	return nil
}

func (x *EventNoticeNotifyBaseGRPC) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

type EventNoticeNotifyGroupBaseGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	// honor,lucky_king,poke 群荣誉,红包运气王，戳一戳
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
}

func (x *EventNoticeNotifyGroupBaseGRPC) Reset() {
	*x = EventNoticeNotifyGroupBaseGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeNotifyGroupBaseGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeNotifyGroupBaseGRPC) ProtoMessage() {}

func (x *EventNoticeNotifyGroupBaseGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeNotifyGroupBaseGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeNotifyGroupBaseGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{3}
}

func (x *EventNoticeNotifyGroupBaseGRPC) GetEventNoticeGroupBase() *EventNoticeGroupBaseGRPC {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeNotifyGroupBaseGRPC) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

type QQFileGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//文件 ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//文件名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//文件大小（字节数）
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	//busid（目前不清楚有什么作用）
	Busid int64 `protobuf:"varint,4,opt,name=busid,proto3" json:"busid,omitempty"`
}

func (x *QQFileGRPC) Reset() {
	*x = QQFileGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQFileGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQFileGRPC) ProtoMessage() {}

func (x *QQFileGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQFileGRPC.ProtoReflect.Descriptor instead.
func (*QQFileGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{4}
}

func (x *QQFileGRPC) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QQFileGRPC) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QQFileGRPC) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QQFileGRPC) GetBusid() int64 {
	if x != nil {
		return x.Busid
	}
	return 0
}

type EventNoticeGroupUploadGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//发送者 QQ 号
	UserId int64       `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	File   *QQFileGRPC `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *EventNoticeGroupUploadGRPC) Reset() {
	*x = EventNoticeGroupUploadGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupUploadGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupUploadGRPC) ProtoMessage() {}

func (x *EventNoticeGroupUploadGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupUploadGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupUploadGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{5}
}

func (x *EventNoticeGroupUploadGRPC) GetEventNoticeGroupBase() *EventNoticeGroupBaseGRPC {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupUploadGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupUploadGRPC) GetFile() *QQFileGRPC {
	if x != nil {
		return x.File
	}
	return nil
}

type EventNoticeGroupAdminGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//set、unset	事件子类型，分别表示设置和取消管理员
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	//管理员 QQ 号
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *EventNoticeGroupAdminGRPC) Reset() {
	*x = EventNoticeGroupAdminGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupAdminGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupAdminGRPC) ProtoMessage() {}

func (x *EventNoticeGroupAdminGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupAdminGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupAdminGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{6}
}

func (x *EventNoticeGroupAdminGRPC) GetEventNoticeGroupBase() *EventNoticeGroupBaseGRPC {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupAdminGRPC) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *EventNoticeGroupAdminGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

//群成员减少
type EventNoticeGroupDecreaseGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//leave、kick、kick_me	事件子类型，分别表示主动退群、成员被踢、登录号被踢
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	//离开者 QQ 号
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//操作者 QQ 号（如果是主动退群，则和 user_id 相同）
	OperatorId int64 `protobuf:"varint,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
}

func (x *EventNoticeGroupDecreaseGRPC) Reset() {
	*x = EventNoticeGroupDecreaseGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupDecreaseGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupDecreaseGRPC) ProtoMessage() {}

func (x *EventNoticeGroupDecreaseGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupDecreaseGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupDecreaseGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{7}
}

func (x *EventNoticeGroupDecreaseGRPC) GetEventNoticeGroupBase() *EventNoticeGroupBaseGRPC {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupDecreaseGRPC) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *EventNoticeGroupDecreaseGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupDecreaseGRPC) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

//群成员增加
type EventNoticeGroupIncreaseGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//approve、invite	事件子类型，分别表示管理员已同意入群、管理员邀请入群
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	//加入者 QQ 号
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//操作者 QQ 号
	OperatorId int64 `protobuf:"varint,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
}

func (x *EventNoticeGroupIncreaseGRPC) Reset() {
	*x = EventNoticeGroupIncreaseGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupIncreaseGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupIncreaseGRPC) ProtoMessage() {}

func (x *EventNoticeGroupIncreaseGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupIncreaseGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupIncreaseGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{8}
}

func (x *EventNoticeGroupIncreaseGRPC) GetEventNoticeGroupBase() *EventNoticeGroupBaseGRPC {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupIncreaseGRPC) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *EventNoticeGroupIncreaseGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupIncreaseGRPC) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

//群禁言
type EventNoticeGroupBanGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//ban、lift_ban	事件子类型，分别表示禁言、解除禁言
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	//加入者 QQ 号
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//操作者 QQ 号
	OperatorId int64 `protobuf:"varint,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	//禁言时长，单位秒
	Duration int64 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *EventNoticeGroupBanGRPC) Reset() {
	*x = EventNoticeGroupBanGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupBanGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupBanGRPC) ProtoMessage() {}

func (x *EventNoticeGroupBanGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupBanGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupBanGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{9}
}

func (x *EventNoticeGroupBanGRPC) GetEventNoticeGroupBase() *EventNoticeGroupBaseGRPC {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupBanGRPC) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *EventNoticeGroupBanGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupBanGRPC) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *EventNoticeGroupBanGRPC) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

//好友添加
type EventNoticeFriendAddGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeBase *EventNoticeBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeBase,proto3" json:"eventNoticeBase,omitempty"`
	//新添加好友 QQ 号
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *EventNoticeFriendAddGRPC) Reset() {
	*x = EventNoticeFriendAddGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeFriendAddGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeFriendAddGRPC) ProtoMessage() {}

func (x *EventNoticeFriendAddGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeFriendAddGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeFriendAddGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{10}
}

func (x *EventNoticeFriendAddGRPC) GetEventNoticeBase() *EventNoticeBaseGRPC {
	if x != nil {
		return x.EventNoticeBase
	}
	return nil
}

func (x *EventNoticeFriendAddGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

//群消息撤回
type EventNoticeGroupRecallGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//消息发送者 QQ 号
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//操作者 QQ 号
	OperatorId int64 `protobuf:"varint,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	//被撤回的消息 ID
	MessageId int64 `protobuf:"varint,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *EventNoticeGroupRecallGRPC) Reset() {
	*x = EventNoticeGroupRecallGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupRecallGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupRecallGRPC) ProtoMessage() {}

func (x *EventNoticeGroupRecallGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupRecallGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupRecallGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{11}
}

func (x *EventNoticeGroupRecallGRPC) GetEventNoticeGroupBase() *EventNoticeGroupBaseGRPC {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupRecallGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupRecallGRPC) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *EventNoticeGroupRecallGRPC) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

//好友消息撤回
type EventNoticeFriendRecallGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeBase *EventNoticeBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeBase,proto3" json:"eventNoticeBase,omitempty"`
	//好友 QQ 号
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//被撤回的消息 ID
	MessageId int64 `protobuf:"varint,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *EventNoticeFriendRecallGRPC) Reset() {
	*x = EventNoticeFriendRecallGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeFriendRecallGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeFriendRecallGRPC) ProtoMessage() {}

func (x *EventNoticeFriendRecallGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeFriendRecallGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeFriendRecallGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{12}
}

func (x *EventNoticeFriendRecallGRPC) GetEventNoticeBase() *EventNoticeBaseGRPC {
	if x != nil {
		return x.EventNoticeBase
	}
	return nil
}

func (x *EventNoticeFriendRecallGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeFriendRecallGRPC) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

//群内戳一戳
type EventNoticeGroupNotifyPokeGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeNotifyGroupBase *EventNoticeNotifyGroupBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeNotifyGroupBase,proto3" json:"eventNoticeNotifyGroupBase,omitempty"`
	//发送者 QQ 号
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//被戳者 QQ 号
	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *EventNoticeGroupNotifyPokeGRPC) Reset() {
	*x = EventNoticeGroupNotifyPokeGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyPokeGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyPokeGRPC) ProtoMessage() {}

func (x *EventNoticeGroupNotifyPokeGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyPokeGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyPokeGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{13}
}

func (x *EventNoticeGroupNotifyPokeGRPC) GetEventNoticeNotifyGroupBase() *EventNoticeNotifyGroupBaseGRPC {
	if x != nil {
		return x.EventNoticeNotifyGroupBase
	}
	return nil
}

func (x *EventNoticeGroupNotifyPokeGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupNotifyPokeGRPC) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

//群红包运气王
type EventNoticeGroupNotifyLuckyKingGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeNotifyGroupBase *EventNoticeNotifyGroupBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeNotifyGroupBase,proto3" json:"eventNoticeNotifyGroupBase,omitempty"`
	//红包发送者 QQ 号
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//运气王 QQ 号
	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *EventNoticeGroupNotifyLuckyKingGRPC) Reset() {
	*x = EventNoticeGroupNotifyLuckyKingGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyLuckyKingGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyLuckyKingGRPC) ProtoMessage() {}

func (x *EventNoticeGroupNotifyLuckyKingGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyLuckyKingGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyLuckyKingGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{14}
}

func (x *EventNoticeGroupNotifyLuckyKingGRPC) GetEventNoticeNotifyGroupBase() *EventNoticeNotifyGroupBaseGRPC {
	if x != nil {
		return x.EventNoticeNotifyGroupBase
	}
	return nil
}

func (x *EventNoticeGroupNotifyLuckyKingGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupNotifyLuckyKingGRPC) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

//群成员荣誉变更
type EventNoticeGroupNotifyHonorGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeNotifyGroupBase *EventNoticeNotifyGroupBaseGRPC `protobuf:"bytes,1,opt,name=eventNoticeNotifyGroupBase,proto3" json:"eventNoticeNotifyGroupBase,omitempty"`
	//talkative、performer、emotion	荣誉类型，分别表示龙王、群聊之火、快乐源泉
	HonorType string `protobuf:"bytes,2,opt,name=honor_type,json=honorType,proto3" json:"honor_type,omitempty"`
	//成员 QQ 号
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *EventNoticeGroupNotifyHonorGRPC) Reset() {
	*x = EventNoticeGroupNotifyHonorGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyHonorGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyHonorGRPC) ProtoMessage() {}

func (x *EventNoticeGroupNotifyHonorGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyHonorGRPC.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyHonorGRPC) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{15}
}

func (x *EventNoticeGroupNotifyHonorGRPC) GetEventNoticeNotifyGroupBase() *EventNoticeNotifyGroupBaseGRPC {
	if x != nil {
		return x.EventNoticeNotifyGroupBase
	}
	return nil
}

func (x *EventNoticeGroupNotifyHonorGRPC) GetHonorType() string {
	if x != nil {
		return x.HonorType
	}
	return ""
}

func (x *EventNoticeGroupNotifyHonorGRPC) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_event_notice_proto protoreflect.FileDescriptor

var file_event_notice_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x0b, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x12,
	0x32, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x7b, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43,
	0x12, 0x44, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x22, 0x7c, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x12, 0x44,
	0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x47,
	0x52, 0x50, 0x43, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x1e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52,
	0x50, 0x43, 0x12, 0x53, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50,
	0x43, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x5a, 0x0a, 0x0a, 0x51, 0x51, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x52, 0x50, 0x43,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x73, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x75, 0x73, 0x69, 0x64, 0x22, 0xb1,
	0x01, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x52, 0x50, 0x43, 0x12, 0x53, 0x0a,
	0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x14, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x51, 0x51, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x52, 0x50, 0x43,
	0x12, 0x53, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52,
	0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x1c, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x12, 0x53, 0x0a, 0x14, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x1c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x47, 0x52, 0x50, 0x43, 0x12, 0x53, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65,
	0x47, 0x52, 0x50, 0x43, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75,
	0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22,
	0xdf, 0x01, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x12, 0x53, 0x0a, 0x14, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x79, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x47, 0x52, 0x50, 0x43, 0x12, 0x44, 0x0a,
	0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52,
	0x50, 0x43, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a,
	0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x47, 0x52, 0x50, 0x43, 0x12, 0x53, 0x0a, 0x14, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x1b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x61, 0x6c, 0x6c, 0x47, 0x52, 0x50, 0x43, 0x12, 0x44, 0x0a, 0x0f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x0f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x1e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x50, 0x6f, 0x6b, 0x65, 0x47, 0x52, 0x50, 0x43, 0x12, 0x65, 0x0a, 0x1a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73,
	0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x23, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x4b, 0x69, 0x6e, 0x67, 0x47, 0x52, 0x50, 0x43, 0x12,
	0x65, 0x0a, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x1a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a,
	0x1f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x47, 0x52, 0x50, 0x43,
	0x12, 0x65, 0x0a, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x1a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x6e, 0x6f, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x6e,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_event_notice_proto_rawDescOnce sync.Once
	file_event_notice_proto_rawDescData = file_event_notice_proto_rawDesc
)

func file_event_notice_proto_rawDescGZIP() []byte {
	file_event_notice_proto_rawDescOnce.Do(func() {
		file_event_notice_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_notice_proto_rawDescData)
	})
	return file_event_notice_proto_rawDescData
}

var file_event_notice_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_event_notice_proto_goTypes = []interface{}{
	(*EventNoticeBaseGRPC)(nil),                 // 0: model.EventNoticeBaseGRPC
	(*EventNoticeGroupBaseGRPC)(nil),            // 1: model.EventNoticeGroupBaseGRPC
	(*EventNoticeNotifyBaseGRPC)(nil),           // 2: model.EventNoticeNotifyBaseGRPC
	(*EventNoticeNotifyGroupBaseGRPC)(nil),      // 3: model.EventNoticeNotifyGroupBaseGRPC
	(*QQFileGRPC)(nil),                          // 4: model.QQFileGRPC
	(*EventNoticeGroupUploadGRPC)(nil),          // 5: model.EventNoticeGroupUploadGRPC
	(*EventNoticeGroupAdminGRPC)(nil),           // 6: model.EventNoticeGroupAdminGRPC
	(*EventNoticeGroupDecreaseGRPC)(nil),        // 7: model.EventNoticeGroupDecreaseGRPC
	(*EventNoticeGroupIncreaseGRPC)(nil),        // 8: model.EventNoticeGroupIncreaseGRPC
	(*EventNoticeGroupBanGRPC)(nil),             // 9: model.EventNoticeGroupBanGRPC
	(*EventNoticeFriendAddGRPC)(nil),            // 10: model.EventNoticeFriendAddGRPC
	(*EventNoticeGroupRecallGRPC)(nil),          // 11: model.EventNoticeGroupRecallGRPC
	(*EventNoticeFriendRecallGRPC)(nil),         // 12: model.EventNoticeFriendRecallGRPC
	(*EventNoticeGroupNotifyPokeGRPC)(nil),      // 13: model.EventNoticeGroupNotifyPokeGRPC
	(*EventNoticeGroupNotifyLuckyKingGRPC)(nil), // 14: model.EventNoticeGroupNotifyLuckyKingGRPC
	(*EventNoticeGroupNotifyHonorGRPC)(nil),     // 15: model.EventNoticeGroupNotifyHonorGRPC
	(*EventBaseGRPC)(nil),                       // 16: model.EventBaseGRPC
}
var file_event_notice_proto_depIdxs = []int32{
	16, // 0: model.EventNoticeBaseGRPC.eventBase:type_name -> model.EventBaseGRPC
	0,  // 1: model.EventNoticeGroupBaseGRPC.eventNoticeBase:type_name -> model.EventNoticeBaseGRPC
	0,  // 2: model.EventNoticeNotifyBaseGRPC.eventNoticeBase:type_name -> model.EventNoticeBaseGRPC
	1,  // 3: model.EventNoticeNotifyGroupBaseGRPC.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBaseGRPC
	1,  // 4: model.EventNoticeGroupUploadGRPC.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBaseGRPC
	4,  // 5: model.EventNoticeGroupUploadGRPC.file:type_name -> model.QQFileGRPC
	1,  // 6: model.EventNoticeGroupAdminGRPC.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBaseGRPC
	1,  // 7: model.EventNoticeGroupDecreaseGRPC.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBaseGRPC
	1,  // 8: model.EventNoticeGroupIncreaseGRPC.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBaseGRPC
	1,  // 9: model.EventNoticeGroupBanGRPC.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBaseGRPC
	0,  // 10: model.EventNoticeFriendAddGRPC.eventNoticeBase:type_name -> model.EventNoticeBaseGRPC
	1,  // 11: model.EventNoticeGroupRecallGRPC.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBaseGRPC
	0,  // 12: model.EventNoticeFriendRecallGRPC.eventNoticeBase:type_name -> model.EventNoticeBaseGRPC
	3,  // 13: model.EventNoticeGroupNotifyPokeGRPC.eventNoticeNotifyGroupBase:type_name -> model.EventNoticeNotifyGroupBaseGRPC
	3,  // 14: model.EventNoticeGroupNotifyLuckyKingGRPC.eventNoticeNotifyGroupBase:type_name -> model.EventNoticeNotifyGroupBaseGRPC
	3,  // 15: model.EventNoticeGroupNotifyHonorGRPC.eventNoticeNotifyGroupBase:type_name -> model.EventNoticeNotifyGroupBaseGRPC
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_event_notice_proto_init() }
func file_event_notice_proto_init() {
	if File_event_notice_proto != nil {
		return
	}
	file_event_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_event_notice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeBaseGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupBaseGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeNotifyBaseGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeNotifyGroupBaseGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQFileGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupUploadGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupAdminGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupDecreaseGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupIncreaseGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupBanGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeFriendAddGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupRecallGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeFriendRecallGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyPokeGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyLuckyKingGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyHonorGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_notice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_notice_proto_goTypes,
		DependencyIndexes: file_event_notice_proto_depIdxs,
		MessageInfos:      file_event_notice_proto_msgTypes,
	}.Build()
	File_event_notice_proto = out.File
	file_event_notice_proto_rawDesc = nil
	file_event_notice_proto_goTypes = nil
	file_event_notice_proto_depIdxs = nil
}
