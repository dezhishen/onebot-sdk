// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: event_notice.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventNoticeBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventBase  *EventBase `protobuf:"bytes,1,opt,name=eventBase,proto3" json:"eventBase,omitempty"`
	NoticeType string     `protobuf:"bytes,2,opt,name=notice_type,json=noticeType,proto3" json:"notice_type,omitempty"`
}

func (x *EventNoticeBase) Reset() {
	*x = EventNoticeBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeBase) ProtoMessage() {}

func (x *EventNoticeBase) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeBase.ProtoReflect.Descriptor instead.
func (*EventNoticeBase) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{0}
}

func (x *EventNoticeBase) GetEventBase() *EventBase {
	if x != nil {
		return x.EventBase
	}
	return nil
}

func (x *EventNoticeBase) GetNoticeType() string {
	if x != nil {
		return x.NoticeType
	}
	return ""
}

type EventNoticeGroupBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeBase *EventNoticeBase `protobuf:"bytes,1,opt,name=eventNoticeBase,proto3" json:"eventNoticeBase,omitempty"`
	//群号
	GroupId int64 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *EventNoticeGroupBase) Reset() {
	*x = EventNoticeGroupBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupBase) ProtoMessage() {}

func (x *EventNoticeGroupBase) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupBase.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupBase) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{1}
}

func (x *EventNoticeGroupBase) GetEventNoticeBase() *EventNoticeBase {
	if x != nil {
		return x.EventNoticeBase
	}
	return nil
}

func (x *EventNoticeGroupBase) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type EventNoticeNotifyBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeBase *EventNoticeBase `protobuf:"bytes,1,opt,name=eventNoticeBase,proto3" json:"eventNoticeBase,omitempty"`
	// honor,lucky_king,poke 群荣誉,红包运气王，戳一戳
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
}

func (x *EventNoticeNotifyBase) Reset() {
	*x = EventNoticeNotifyBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeNotifyBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeNotifyBase) ProtoMessage() {}

func (x *EventNoticeNotifyBase) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeNotifyBase.ProtoReflect.Descriptor instead.
func (*EventNoticeNotifyBase) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{2}
}

func (x *EventNoticeNotifyBase) GetEventNoticeBase() *EventNoticeBase {
	if x != nil {
		return x.EventNoticeBase
	}
	return nil
}

func (x *EventNoticeNotifyBase) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

type EventNoticeNotifyGroupBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBase `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	// honor,lucky_king,poke 群荣誉,红包运气王，戳一戳
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
}

func (x *EventNoticeNotifyGroupBase) Reset() {
	*x = EventNoticeNotifyGroupBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeNotifyGroupBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeNotifyGroupBase) ProtoMessage() {}

func (x *EventNoticeNotifyGroupBase) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeNotifyGroupBase.ProtoReflect.Descriptor instead.
func (*EventNoticeNotifyGroupBase) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{3}
}

func (x *EventNoticeNotifyGroupBase) GetEventNoticeGroupBase() *EventNoticeGroupBase {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeNotifyGroupBase) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

type QQFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//文件 ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//文件名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//文件大小（字节数）
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	//busid（目前不清楚有什么作用）
	Busid int64 `protobuf:"varint,4,opt,name=busid,proto3" json:"busid,omitempty"`
}

func (x *QQFile) Reset() {
	*x = QQFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QQFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QQFile) ProtoMessage() {}

func (x *QQFile) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QQFile.ProtoReflect.Descriptor instead.
func (*QQFile) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{4}
}

func (x *QQFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QQFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QQFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QQFile) GetBusid() int64 {
	if x != nil {
		return x.Busid
	}
	return 0
}

type EventNoticeGroupUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBase `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//发送者 QQ 号
	UserId int64   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	File   *QQFile `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *EventNoticeGroupUpload) Reset() {
	*x = EventNoticeGroupUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupUpload) ProtoMessage() {}

func (x *EventNoticeGroupUpload) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupUpload.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupUpload) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{5}
}

func (x *EventNoticeGroupUpload) GetEventNoticeGroupBase() *EventNoticeGroupBase {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupUpload) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupUpload) GetFile() *QQFile {
	if x != nil {
		return x.File
	}
	return nil
}

type EventNoticeGroupAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBase `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//set、unset	事件子类型，分别表示设置和取消管理员
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	//管理员 QQ 号
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *EventNoticeGroupAdmin) Reset() {
	*x = EventNoticeGroupAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupAdmin) ProtoMessage() {}

func (x *EventNoticeGroupAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupAdmin.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupAdmin) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{6}
}

func (x *EventNoticeGroupAdmin) GetEventNoticeGroupBase() *EventNoticeGroupBase {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupAdmin) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *EventNoticeGroupAdmin) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

//群成员减少
type EventNoticeGroupDecrease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBase `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//leave、kick、kick_me	事件子类型，分别表示主动退群、成员被踢、登录号被踢
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	//离开者 QQ 号
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//操作者 QQ 号（如果是主动退群，则和 user_id 相同）
	OperatorId int64 `protobuf:"varint,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
}

func (x *EventNoticeGroupDecrease) Reset() {
	*x = EventNoticeGroupDecrease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupDecrease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupDecrease) ProtoMessage() {}

func (x *EventNoticeGroupDecrease) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupDecrease.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupDecrease) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{7}
}

func (x *EventNoticeGroupDecrease) GetEventNoticeGroupBase() *EventNoticeGroupBase {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupDecrease) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *EventNoticeGroupDecrease) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupDecrease) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

//群成员增加
type EventNoticeGroupIncrease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBase `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//approve、invite	事件子类型，分别表示管理员已同意入群、管理员邀请入群
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	//加入者 QQ 号
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//操作者 QQ 号
	OperatorId int64 `protobuf:"varint,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
}

func (x *EventNoticeGroupIncrease) Reset() {
	*x = EventNoticeGroupIncrease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupIncrease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupIncrease) ProtoMessage() {}

func (x *EventNoticeGroupIncrease) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupIncrease.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupIncrease) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{8}
}

func (x *EventNoticeGroupIncrease) GetEventNoticeGroupBase() *EventNoticeGroupBase {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupIncrease) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *EventNoticeGroupIncrease) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupIncrease) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

//群禁言
type EventNoticeGroupBan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBase `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//ban、lift_ban	事件子类型，分别表示禁言、解除禁言
	SubType string `protobuf:"bytes,2,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
	//加入者 QQ 号
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//操作者 QQ 号
	OperatorId int64 `protobuf:"varint,4,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	//禁言时长，单位秒
	Duration int64 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *EventNoticeGroupBan) Reset() {
	*x = EventNoticeGroupBan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupBan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupBan) ProtoMessage() {}

func (x *EventNoticeGroupBan) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupBan.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupBan) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{9}
}

func (x *EventNoticeGroupBan) GetEventNoticeGroupBase() *EventNoticeGroupBase {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupBan) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *EventNoticeGroupBan) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupBan) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *EventNoticeGroupBan) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

//好友添加
type EventNoticeFriendAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeBase *EventNoticeBase `protobuf:"bytes,1,opt,name=eventNoticeBase,proto3" json:"eventNoticeBase,omitempty"`
	//新添加好友 QQ 号
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *EventNoticeFriendAdd) Reset() {
	*x = EventNoticeFriendAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeFriendAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeFriendAdd) ProtoMessage() {}

func (x *EventNoticeFriendAdd) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeFriendAdd.ProtoReflect.Descriptor instead.
func (*EventNoticeFriendAdd) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{10}
}

func (x *EventNoticeFriendAdd) GetEventNoticeBase() *EventNoticeBase {
	if x != nil {
		return x.EventNoticeBase
	}
	return nil
}

func (x *EventNoticeFriendAdd) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

//群消息撤回
type EventNoticeGroupRecall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeGroupBase *EventNoticeGroupBase `protobuf:"bytes,1,opt,name=eventNoticeGroupBase,proto3" json:"eventNoticeGroupBase,omitempty"`
	//消息发送者 QQ 号
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//操作者 QQ 号
	OperatorId int64 `protobuf:"varint,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	//被撤回的消息 ID
	MessageId int64 `protobuf:"varint,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *EventNoticeGroupRecall) Reset() {
	*x = EventNoticeGroupRecall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupRecall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupRecall) ProtoMessage() {}

func (x *EventNoticeGroupRecall) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupRecall.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupRecall) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{11}
}

func (x *EventNoticeGroupRecall) GetEventNoticeGroupBase() *EventNoticeGroupBase {
	if x != nil {
		return x.EventNoticeGroupBase
	}
	return nil
}

func (x *EventNoticeGroupRecall) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupRecall) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *EventNoticeGroupRecall) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

//好友消息撤回
type EventNoticeFriendRecall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeBase *EventNoticeBase `protobuf:"bytes,1,opt,name=eventNoticeBase,proto3" json:"eventNoticeBase,omitempty"`
	//好友 QQ 号
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//被撤回的消息 ID
	MessageId int64 `protobuf:"varint,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *EventNoticeFriendRecall) Reset() {
	*x = EventNoticeFriendRecall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeFriendRecall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeFriendRecall) ProtoMessage() {}

func (x *EventNoticeFriendRecall) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeFriendRecall.ProtoReflect.Descriptor instead.
func (*EventNoticeFriendRecall) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{12}
}

func (x *EventNoticeFriendRecall) GetEventNoticeBase() *EventNoticeBase {
	if x != nil {
		return x.EventNoticeBase
	}
	return nil
}

func (x *EventNoticeFriendRecall) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeFriendRecall) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

//群内戳一戳
type EventNoticeGroupNotifyPoke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeNotifyGroupBase *EventNoticeNotifyGroupBase `protobuf:"bytes,1,opt,name=eventNoticeNotifyGroupBase,proto3" json:"eventNoticeNotifyGroupBase,omitempty"`
	//发送者 QQ 号
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//被戳者 QQ 号
	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *EventNoticeGroupNotifyPoke) Reset() {
	*x = EventNoticeGroupNotifyPoke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyPoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyPoke) ProtoMessage() {}

func (x *EventNoticeGroupNotifyPoke) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyPoke.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyPoke) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{13}
}

func (x *EventNoticeGroupNotifyPoke) GetEventNoticeNotifyGroupBase() *EventNoticeNotifyGroupBase {
	if x != nil {
		return x.EventNoticeNotifyGroupBase
	}
	return nil
}

func (x *EventNoticeGroupNotifyPoke) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupNotifyPoke) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

//群红包运气王
type EventNoticeGroupNotifyLuckyKing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeNotifyGroupBase *EventNoticeNotifyGroupBase `protobuf:"bytes,1,opt,name=eventNoticeNotifyGroupBase,proto3" json:"eventNoticeNotifyGroupBase,omitempty"`
	//红包发送者 QQ 号
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//运气王 QQ 号
	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *EventNoticeGroupNotifyLuckyKing) Reset() {
	*x = EventNoticeGroupNotifyLuckyKing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyLuckyKing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyLuckyKing) ProtoMessage() {}

func (x *EventNoticeGroupNotifyLuckyKing) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyLuckyKing.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyLuckyKing) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{14}
}

func (x *EventNoticeGroupNotifyLuckyKing) GetEventNoticeNotifyGroupBase() *EventNoticeNotifyGroupBase {
	if x != nil {
		return x.EventNoticeNotifyGroupBase
	}
	return nil
}

func (x *EventNoticeGroupNotifyLuckyKing) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EventNoticeGroupNotifyLuckyKing) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

//群成员荣誉变更
type EventNoticeGroupNotifyHonor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventNoticeNotifyGroupBase *EventNoticeNotifyGroupBase `protobuf:"bytes,1,opt,name=eventNoticeNotifyGroupBase,proto3" json:"eventNoticeNotifyGroupBase,omitempty"`
	//talkative、performer、emotion	荣誉类型，分别表示龙王、群聊之火、快乐源泉
	HonorType string `protobuf:"bytes,2,opt,name=honor_type,json=honorType,proto3" json:"honor_type,omitempty"`
	//成员 QQ 号
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *EventNoticeGroupNotifyHonor) Reset() {
	*x = EventNoticeGroupNotifyHonor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_notice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyHonor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyHonor) ProtoMessage() {}

func (x *EventNoticeGroupNotifyHonor) ProtoReflect() protoreflect.Message {
	mi := &file_event_notice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyHonor.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyHonor) Descriptor() ([]byte, []int) {
	return file_event_notice_proto_rawDescGZIP(), []int{15}
}

func (x *EventNoticeGroupNotifyHonor) GetEventNoticeNotifyGroupBase() *EventNoticeNotifyGroupBase {
	if x != nil {
		return x.EventNoticeNotifyGroupBase
	}
	return nil
}

func (x *EventNoticeGroupNotifyHonor) GetHonorType() string {
	if x != nil {
		return x.HonorType
	}
	return ""
}

func (x *EventNoticeGroupNotifyHonor) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_event_notice_proto protoreflect.FileDescriptor

var file_event_notice_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x0b, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x73, 0x0a, 0x14,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x61, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x22, 0x74, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x61, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x56, 0x0a, 0x06, 0x51, 0x51, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x75, 0x73, 0x69, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x16, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4f, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x51, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x4f, 0x0a, 0x14,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xc0, 0x01, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x12, 0x4f,
	0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x14, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x12,
	0x4f, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x71, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x12, 0x40, 0x0a, 0x0f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12,
	0x4f, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x14, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x40, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22,
	0xb5, 0x01, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x6f, 0x6b, 0x65, 0x12, 0x61,
	0x0a, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x1f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x4b, 0x69, 0x6e, 0x67, 0x12, 0x61, 0x0a, 0x1a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x1b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48,
	0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x61, 0x0a, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x52, 0x1a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x6e, 0x6f, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x6e,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_event_notice_proto_rawDescOnce sync.Once
	file_event_notice_proto_rawDescData = file_event_notice_proto_rawDesc
)

func file_event_notice_proto_rawDescGZIP() []byte {
	file_event_notice_proto_rawDescOnce.Do(func() {
		file_event_notice_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_notice_proto_rawDescData)
	})
	return file_event_notice_proto_rawDescData
}

var file_event_notice_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_event_notice_proto_goTypes = []interface{}{
	(*EventNoticeBase)(nil),                 // 0: model.EventNoticeBase
	(*EventNoticeGroupBase)(nil),            // 1: model.EventNoticeGroupBase
	(*EventNoticeNotifyBase)(nil),           // 2: model.EventNoticeNotifyBase
	(*EventNoticeNotifyGroupBase)(nil),      // 3: model.EventNoticeNotifyGroupBase
	(*QQFile)(nil),                          // 4: model.QQFile
	(*EventNoticeGroupUpload)(nil),          // 5: model.EventNoticeGroupUpload
	(*EventNoticeGroupAdmin)(nil),           // 6: model.EventNoticeGroupAdmin
	(*EventNoticeGroupDecrease)(nil),        // 7: model.EventNoticeGroupDecrease
	(*EventNoticeGroupIncrease)(nil),        // 8: model.EventNoticeGroupIncrease
	(*EventNoticeGroupBan)(nil),             // 9: model.EventNoticeGroupBan
	(*EventNoticeFriendAdd)(nil),            // 10: model.EventNoticeFriendAdd
	(*EventNoticeGroupRecall)(nil),          // 11: model.EventNoticeGroupRecall
	(*EventNoticeFriendRecall)(nil),         // 12: model.EventNoticeFriendRecall
	(*EventNoticeGroupNotifyPoke)(nil),      // 13: model.EventNoticeGroupNotifyPoke
	(*EventNoticeGroupNotifyLuckyKing)(nil), // 14: model.EventNoticeGroupNotifyLuckyKing
	(*EventNoticeGroupNotifyHonor)(nil),     // 15: model.EventNoticeGroupNotifyHonor
	(*EventBase)(nil),                       // 16: model.EventBase
}
var file_event_notice_proto_depIdxs = []int32{
	16, // 0: model.EventNoticeBase.eventBase:type_name -> model.EventBase
	0,  // 1: model.EventNoticeGroupBase.eventNoticeBase:type_name -> model.EventNoticeBase
	0,  // 2: model.EventNoticeNotifyBase.eventNoticeBase:type_name -> model.EventNoticeBase
	1,  // 3: model.EventNoticeNotifyGroupBase.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBase
	1,  // 4: model.EventNoticeGroupUpload.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBase
	4,  // 5: model.EventNoticeGroupUpload.file:type_name -> model.QQFile
	1,  // 6: model.EventNoticeGroupAdmin.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBase
	1,  // 7: model.EventNoticeGroupDecrease.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBase
	1,  // 8: model.EventNoticeGroupIncrease.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBase
	1,  // 9: model.EventNoticeGroupBan.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBase
	0,  // 10: model.EventNoticeFriendAdd.eventNoticeBase:type_name -> model.EventNoticeBase
	1,  // 11: model.EventNoticeGroupRecall.eventNoticeGroupBase:type_name -> model.EventNoticeGroupBase
	0,  // 12: model.EventNoticeFriendRecall.eventNoticeBase:type_name -> model.EventNoticeBase
	3,  // 13: model.EventNoticeGroupNotifyPoke.eventNoticeNotifyGroupBase:type_name -> model.EventNoticeNotifyGroupBase
	3,  // 14: model.EventNoticeGroupNotifyLuckyKing.eventNoticeNotifyGroupBase:type_name -> model.EventNoticeNotifyGroupBase
	3,  // 15: model.EventNoticeGroupNotifyHonor.eventNoticeNotifyGroupBase:type_name -> model.EventNoticeNotifyGroupBase
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_event_notice_proto_init() }
func file_event_notice_proto_init() {
	if File_event_notice_proto != nil {
		return
	}
	file_event_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_event_notice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeNotifyBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeNotifyGroupBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QQFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupDecrease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupIncrease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupBan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeFriendAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupRecall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeFriendRecall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyPoke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyLuckyKing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_notice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyHonor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_notice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_notice_proto_goTypes,
		DependencyIndexes: file_event_notice_proto_depIdxs,
		MessageInfos:      file_event_notice_proto_msgTypes,
	}.Build()
	File_event_notice_proto = out.File
	file_event_notice_proto_rawDesc = nil
	file_event_notice_proto_goTypes = nil
	file_event_notice_proto_depIdxs = nil
}
